{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var k=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),u=(a,s)=>{for(var c in s)i(a,c,{get:s[c],enumerable:!0})},o=(a,s,c,n)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let l of h(s))!N.call(a,l)&&l!==c&&i(a,l,{get:()=>s[l],enumerable:!(n=p(s,l))||n.enumerable});return a};var g=(a,s,c)=>(c=a!=null?d(m(a)):{},o(s||!a||!a.__esModule?i(c,\"default\",{value:a,enumerable:!0}):c,a)),y=a=>o(i({},\"__esModule\",{value:!0}),a);var r=k((S,t)=>{t.exports=_jsx_runtime});var I={};u(I,{default:()=>f,frontmatter:()=>b});var e=g(r()),b={title:\"SOLID Principles\",date:\"2022-07-30\",tags:[\"design\",\"coding\",\"software\"],draft:!1,summary:\"Set of rules each programmer should adhere to in order to make the code more secure, robust and extensible. This is my attempt to make it easier to understand with the help of simple examples.\"};function w(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({div:\"div\",h2:\"h2\",a:\"a\",span:\"span\",ul:\"ul\",li:\"li\",h3:\"h3\",hr:\"hr\",p:\"p\",pre:\"pre\",code:\"code\",blockquote:\"blockquote\",strong:\"strong\"},a.components),{Image:l}=n;return l||v(\"Image\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.div,{children:(0,e.jsx)(l,{alt:\"solid\",src:\"/static/images/solid.jpeg\",width:\"1600\",height:\"900\"})}),(0,e.jsxs)(n.h2,{id:\"the-principles-\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#the-principles-\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"The principles :\"]}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"Single-responsibility principle\"}),(0,e.jsx)(n.li,{children:\"Open-Closed principle\"}),(0,e.jsx)(n.li,{children:\"Liskov substitution principle\"}),(0,e.jsx)(n.li,{children:\"Interface segregation principle\"}),(0,e.jsx)(n.li,{children:\"Dependency inversion principle\"})]}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"single-responsibility-principle\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#single-responsibility-principle\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Single Responsibility Principle\"]}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.p,{children:\"A class should do one thing and therefore it should have only a single reason to change\"}),(0,e.jsx)(n.pre,{className:\"language-cpp\",children:(0,e.jsxs)(n.code,{className:\"language-cpp code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),\" speed\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\tEngine\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" engine\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),\" mileage\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeSpeed\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeDirection\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\"            \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Violate SRP\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// FIX\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"open-closed-principle\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#open-closed-principle\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Open Closed Principle\"]}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.p,{children:\"Classes should be open for extension and closed to modification.\"}),(0,e.jsx)(n.pre,{className:\"language-cpp\",children:(0,e.jsxs)(n.code,{className:\"language-cpp code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repairLocal\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repairBranded\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Violate Open closed principle\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Addition of new tyep of repair will result into modfying the existing class.\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"//FIX\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"virtual\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"rapair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"LocalGarage\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\"  \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"//Local repair\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"BrandedGarage\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\"  \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"//Branded repair\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`})]})}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"liskov-substitution-principle\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#liskov-substitution-principle\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Liskov Substitution Principle\"]}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.p,{children:\"Subclasses should be substitutable for their base classes\"}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"Liskov Substitution Principle is an extension of the Open Close Principle and is violated when you have written code that throws \\u201Cnot implemented exceptions\\u201D or you hide methods in a derived class that have been marked as virtual in the base class.\"})}),(0,e.jsx)(n.pre,{className:\"language-cpp\",children:(0,e.jsxs)(n.code,{className:\"language-cpp code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"virtual\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeGear\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Scooti\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeGear\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"throw\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"Not implemented\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"//Violate Liskov substitution principle\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// FIX\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"GearVehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"virtual\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeGear\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"NonGearVehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Scooti\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"NonGearVehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"interface-segregation-principle\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#interface-segregation-principle\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Interface Segregation Principle\"]}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.p,{children:\"Separating the interfaces\"}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"The principle states that many client-specific interfaces are better than one general-purpose interface. Clients should not be forced to implement a function they do no need.\"})}),(0,e.jsx)(n.pre,{className:\"language-cpp\",children:(0,e.jsxs)(n.code,{className:\"language-cpp code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// FIX\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Common Base Interface\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"GearVehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Segregated Interface 1\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"virtual\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"changeGear\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"NonGearVehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Segregated Interface 1\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Scooti\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"NonGearVehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Implement only what required\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"lsp-vs-isp\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#lsp-vs-isp\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"LSP vs ISP\"]}),(0,e.jsx)(n.blockquote,{children:(0,e.jsx)(n.p,{children:\"LSP: The receiver must honor the contracts it promises. ISP: The caller shouldn\\u2019t depend on more of the receiver\\u2019s interface than it needs. Where they fit: If you apply the ISP, you use only a slice of the receiver\\u2019s full interface. But according to LSP, the receiver must still honor that slice. If you fail to apply ISP, there can be a temptation to violate LSP. Because \\u201Cthis method doesn\\u2019t matter, it won\\u2019t actually be called.\\u201D\"})}),(0,e.jsxs)(n.p,{children:[\"Liskov Substitution addresses \",(0,e.jsx)(n.strong,{children:\"Subtypes\"}),\" design whereas Interface Segregation addresses \",(0,e.jsx)(n.strong,{children:\"Basetypes\"}),\" design.\"]}),(0,e.jsx)(\"br\",{}),(0,e.jsx)(\"br\",{}),(0,e.jsxs)(n.h3,{id:\"dependency-inversion-principle\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#dependency-inversion-principle\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Dependency Inversion Principle\"]}),(0,e.jsx)(n.hr,{}),(0,e.jsx)(n.p,{children:\"Our classes should depend upon interfaces or abstract classes instead of concrete classes and functions\"}),(0,e.jsx)(n.pre,{className:\"language-cpp\",children:(0,e.jsxs)(n.code,{className:\"language-cpp code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Car\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token base-clause\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Vehicle\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Garage\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"void\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"repair\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"Vehicle\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" vehicle\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// depends on Vehicle interface rather then on Car\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})})]})}}var f=w;function v(a,s){throw new Error(\"Expected \"+(s?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return y(I);})();\n;return Component;","toc":[{"value":"The principles :","url":"#the-principles-","depth":2},{"value":"Single Responsibility Principle","url":"#single-responsibility-principle","depth":3},{"value":"Open Closed Principle","url":"#open-closed-principle","depth":3},{"value":"Liskov Substitution Principle","url":"#liskov-substitution-principle","depth":3},{"value":"Interface Segregation Principle","url":"#interface-segregation-principle","depth":3},{"value":"LSP vs ISP","url":"#lsp-vs-isp","depth":3},{"value":"Dependency Inversion Principle","url":"#dependency-inversion-principle","depth":3}],"frontMatter":{"readingTime":{"text":"5 min read","minutes":4.185,"time":251100,"words":837},"slug":"solid-principles","fileName":"solid-principles.md","title":"SOLID Principles","date":"2022-07-30T00:00:00.000Z","tags":["design","coding","software"],"draft":false,"summary":"Set of rules each programmer should adhere to in order to make the code more secure, robust and extensible. This is my attempt to make it easier to understand with the help of simple examples."}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.485,"time":29100,"words":97},"slug":["default"],"fileName":"default.md","name":"Subhash Jha","avatar":"/static/images/profile.JPG","occupation":"Software Developer","company":"Adobe Systems","email":"subhashjha.mail@gmail.com","twitter":"https://twitter.com/subhashjha333","linkedin":"https://www.linkedin.com/in/scjha","github":"https://github.com/jhasubhash","currjobdesc":"I am currently working as Computer Scientist @ Adobe Systems.","date":null}],"prev":{"title":"Binary Search","date":"2022-07-29T00:00:00.000Z","lastmod":"2022-07-29","tags":["search","algorithm"],"draft":false,"summary":"In this post we will look at the implementation of the different variations of binary search, which can be used to solve almost all the coding problems around this.","canonicalUrl":"https://pseudocoder.in/blog/binary-search/","slug":"binary-search"},"next":null},"__N_SSG":true}